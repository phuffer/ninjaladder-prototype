{
  "name": "anymatch",
  "version": "1.0.0",
  "description": "Matches strings against configurable strings, globs, regular expressions, and/or functions",
  "author": {
    "name": "Elan Shanker",
    "url": "http://github.com/es128"
  },
  "homepage": "https://github.com/es128/anymatch",
  "repository": {
    "type": "git",
    "url": "https://github.com/es128/anymatch"
  },
  "bugs": {
    "url": "https://github.com/es128/anymatch/issues"
  },
  "keywords": [
    "match",
    "any",
    "string",
    "file",
    "fs",
    "list",
    "glob",
    "regex",
    "regexp",
    "regular",
    "expression",
    "function"
  ],
  "dependencies": {
    "minimatch": "~1.0.0"
  },
  "scripts": {
    "test": "istanbul cover _mocha && cat ./coverage/lcov.info | coveralls"
  },
  "license": "ISC",
  "devDependencies": {
    "coveralls": "~2.11.2",
    "istanbul": "~0.3.2",
    "mocha": "~1.21.4"
  },
  "readme": "var inspect = require('util').inspect;\nvar i = function (val) {return inspect(val, {colors: true})};\n\n\nvar anymatch = require('./');\nconsole.log(\"var anymatch = require('anymatch');\\n\");\n\nvar matchers = [\n  'path/to/file.js',\n  'path/anyjs/**/*.js',\n  /foo.js$/,\n  function (string) {\n    return string.indexOf('bar') !== -1 && string.length > 10;\n  }\n];\n\nconsole.log('var matchers =',\n  i(matchers).replace('[Function]', matchers[3].toString() + '\\n'), ';\\n');\n\nconsole.log(\"anymatch(matchers, 'path/to/file.js');\",\n    \" =>\", i(anymatch(matchers, 'path/to/file.js') )); // true\nconsole.log(\"anymatch(matchers, 'path/anyjs/baz.js');\",\n    \" =>\", i(anymatch(matchers, 'path/anyjs/baz.js') )); // true\nconsole.log(\"anymatch(matchers, 'path/to/foo.js');\",\n    \" =>\", i(anymatch(matchers, 'path/to/foo.js') )); // true\nconsole.log(\"anymatch(matchers, 'path/to/bar.js');\",\n    \" =>\", i(anymatch(matchers, 'path/to/bar.js') )); // true\nconsole.log(\"anymatch(matchers, 'bar.js');\",\n    \" =>\", i(anymatch(matchers, 'bar.js') )); // false\n\n// returnIndex = true\nconsole.log( '\\n// returnIndex = true' );\nconsole.log(\"anymatch(matchers, 'foo.js', true);\",\n    \" =>\", i(anymatch(matchers, 'foo.js', true) )); // 2\nconsole.log(\"anymatch(matchers, 'path/anyjs/foo.js', true);\",\n    \" =>\", i(anymatch(matchers, 'path/anyjs/foo.js', true) )); // 1\n\n// skip matchers\nconsole.log( '\\n// skip matchers' );\nconsole.log(\"anymatch(matchers, 'path/to/file.js', false, 1);\",\n    \" =>\", i(anymatch(matchers, 'path/to/file.js', false, 1) )); // false\nconsole.log(\"anymatch(matchers, 'path/anyjs/foo.js', true, 2, 3);\",\n    \" =>\", i(anymatch(matchers, 'path/anyjs/foo.js', true, 2, 3) )); // 2\nconsole.log(\"anymatch(matchers, 'path/to/bar.js', true, 0, 3);\",\n    \" =>\", i(anymatch(matchers, 'path/to/bar.js', true, 0, 3) )); // -1\n\n\nvar matcher = anymatch(matchers);\nconsole.log( '\\nvar matcher = anymatch(matchers);' );\nconsole.log(\"matcher('path/to/file.js');\",\n    \" =>\", i(matcher('path/to/file.js') )); // true\nconsole.log(\"matcher('path/anyjs/baz.js', true);\",\n    \" =>\", i(matcher('path/anyjs/baz.js', true) )); // 1\nconsole.log(\"matcher('path/anyjs/baz.js', true, 2);\",\n    \" =>\", i(matcher('path/anyjs/baz.js', true, 2) )); // -1\nconsole.log(\"['foo.js', 'bar.js'].filter(matcher);\",\n    \" =>\", i(['foo.js', 'bar.js'].filter(matcher) )); // ['foo.js']\n",
  "readmeFilename": "readme-examples.js",
  "_id": "anymatch@1.0.0",
  "_from": "anymatch@~1.0.0"
}
